@if $use-tables == true{
    /*------------------------------------*\
        CONTENTS
    \*------------------------------------*/
    /**
     *  BASE
            Alignment
     *  CELL WIDTHS
     *  BORDERED TABLE
            Table Bordered
            Table Outer Bordered
     *  STRIPED TABLE
     *  NUMERICAL
     *  RESPONSIVE TABLE
     *  ROW HOVER
    */

    /**
     *  Credit goes to inuit.css by @csswizardry
     *  Responsive Table Credit goes to http://codepen.io/geoffyuen/pen/FCBEg
     */





    /*------------------------------------*\
        !BASE
    \*------------------------------------*/

    table{
        width: 100%;
        font-size: 1rem;
    }

    th,
    td{
        padding: $table-padding;
        text-align: left;

        @include media-query(palm){
            padding: $table-padding-palm;
        }
    }


    /**
     * ^Alignment
     */
    [colspan]{
        text-align: center;
    }

    [colspan='1']{
        text-align: left;
    }

    [rowspan]{
        vertical-align: middle;
    }

    [rowspan='1']{
        vertical-align: top;
    }





    /*------------------------------------*\
        !CELL WIDTHS
    \*------------------------------------*/

    /**
     * In the HTML example in _tables.scss we see several `col` elements with
     * classes whose numbers represent a percentage width for that column. We
     * leave one column free of a class so that column can soak up the effects
     * of any accidental breakage in the table. This mixin will generate those
     * classes for you. If you need to adjust what classes are generated refer
     * to _tables.scss and modify the $table-cell-widths variable.
     */
    @include table-width($table-cell-widths);





    /*------------------------------------*\
        !BORDERED TABLE
    \*------------------------------------*/

    /**
     * ^Table Bordered
     */
    @if $table--bordered == true{
        .table--bordered{
            th,
            td{
                border: $table-border-size solid $table-border-color;

                &:empty{
                    border: 0;
                }
            }
        }
    }


    /**
     * ^Table Outer Bordered
     */
    @if $table--outer-bordered == true{
        .table--outer-bordered{
            border: $table-border-size solid $table-border-color;
        }
    }





    /*------------------------------------*\
        !STRIPED TABLE
    \*------------------------------------*/
    @if $table--striped == true{
        .table--striped{
            tbody tr:nth-of-type(odd){
                background-color: $table-stripe-background-color;
            }
        }
    }





    /*------------------------------------*\
        !NUMERICAL
    \*------------------------------------*/

    @if $table--numerical == true{
        .table--numerical{
            text-align: right;
        }
    }





    /*------------------------------------*\
        !RESPONSIVE TABLE
    \*------------------------------------*/

    /**
     * ^Credit: http://codepen.io/geoffyuen/pen/FCBEg
     */

    @if $table--responsive == true{
        .table--responsive{

            th{
                display: none; // for accessibility, use a visually hidden method here instead! Thanks, reddit!
            }

            td{
                display: block;

                &:before{
                    display: inline-block;
                    margin-right: 15px;
                    font-weight: bold;
                    content: attr(data-th) ': '; // who knew you could do this? The internet, that's who.

                    @include media-query(lap-and-up){
                        display: none;
                    }
                }
            }

            th,
            td{
                @include media-query(palm){
                    text-align: left;
                }

                @include media-query(lap-and-up){
                    display: table-cell;
                }
            }
        }
    }





    /*------------------------------------*\
        !ROW HOVER
    \*------------------------------------*/

    @if $table--row-hover == true {
        .table--row-hover {
            tr {
                transition: background-color 0.1s ease-in-out;

                &:hover {
                    background-color: $table-row-hover-color !important;
                    cursor: pointer;
                }

                td {
                    padding: 0;
                }

                a {
                    display: block;
                    padding: $table-padding;
                    color: inherit;
                    text-decoration: none;

                    @include media-query(palm) {
                        padding: $table-padding-palm;
                    }

                    &:hover {
                        color: inherit;
                    }
                }
            }

            thead tr:hover {
                background-color: inherit !important;
                cursor: default;
            }
        }
    }
}
