/*------------------------------------*\
    CONTENTS
\*------------------------------------*/
/**
 *  CREDITS
 *  VARIABLES
 *  IMPORTS
 *  BASE TYPE SETTINGS
 */





/*------------------------------------*\
    !CREDITS
\*------------------------------------*/

/**
 * Type settings are a slightly modified version of typesettings.io
 * by Ian Rose. https://twitter.com/rose_ian & http://typesettings.io
 */





/*------------------------------------*\
    !VARIABLES
\*------------------------------------*/

$font-sans: 'Helvetica Neue', Helvetica, Arial, sans-serif !default;
$font-serif: Georgia, 'Times New Roman', serif !default;
$font-mono: 'Lucida Console', Monaco, monospace !default;
$text-color: #000 !default;

// The vertical grid unit. Margin, padding, and line-height are set to multiples of this value.
// This is the value that determines the baseline for our vertical rhythm. The default value of 6px
// allows more fine tuned designs that still obey vertical rhythm.
$base-vertical-unit: 6px !default;

// The value that multiplies the $base-vertical-unit to get the $base-line-height. This gives type
// an ideal line-height.
$base-line-multi: 4 !default;

// Base font size in pixels.
$base-font-size: 16px !default;

// Modular scale ratio that is used to figure out all the different font sizes
$ms-ratio: 1.414 !default;

// Paragraph settings
$paragraph-indent: true !default;
$paragraph-justify: true !default;





/*------------------------------------*\
    !IMPORTS
\*------------------------------------*/

@import "../objects/type/type-mixins";





/*------------------------------------*\
    !BASE TYPE SETTINGS
\*------------------------------------*/

html{
    font-size: ($base-font-size / 16px) * 100%; // Sets the font-size of the project as a percentage. Making it easy to scale up/down the whole project for specific media queries
    -webkit-text-size-adjust: 100%;
}

body{
    margin: 0;
    padding: 0;
    font-family: $font-sans;
    font-weight: 400;
    line-height: $base-line-height;
    color: $text-color;
}

h1, .h1,
h2, .h2,
h3, .h3,
h4, .h4,
h5, .h5,
h6, .h6{
    margin-top: 0;
    padding-top: 0;
    padding-bottom: 0;
    font-family: $font-sans;
    font-weight: bold;
}

// [1] Applies a margin bottom that is a multiple of the vertical grid in EMs. The first argument is the font size context and the second is multiple of the vertical grid unit.
// [2] Sets the type to one of the modular scale values and the second argument sets a unitless line-height as a multiple of the vertical grid.
// [3] A generic media query for tablet size ranges.
// [4] Applies a margin bottom that is the same vertical grid value as the mobile first rule.
// [5] Sets the type to one of the modular scale values and the second argument sets a unitless line-height as a multiple of the vertical grid.
h1, .h1{
    margin-bottom: emRhythm(4, $ms-up2); // [1]
    @include setType(6, $ms-up2); // [2]

    @media (min-width: 43.75em){
        // [3]
        margin-bottom: emRhythm(4, $ms-up3); // [4]
        @include setType(8, $ms-up3); // [5]
    }

    @media (min-width: 56.25em){
        margin-bottom: emRhythm(4, $ms-up4);
        @include setType(10, $ms-up4);
    }
}

h2, .h2{
    margin-bottom: emRhythm(4, $ms-up1);
    @include setType(5, $ms-up1);

    @media (min-width: 43.75em){
        margin-bottom: emRhythm(4, $ms-up2);
        @include setType(6, $ms-up2)
    }

    @media (min-width: 56.25em){
        margin-bottom: emRhythm(4, $ms-up3);
        @include setType(8, $ms-up3);
    }
}

h3, .h3{
    margin-bottom: emRhythm(4, $ms-up1);
    @include setType(5, $ms-up1);

    @media (min-width: 56.25em){
        margin-bottom: emRhythm(4, $ms-up2);
        @include setType(6, $ms-up2);
    }
}

h4, .h4{
    margin-bottom: emRhythm(4, $ms-up1);
    @include setType(5, $ms-up1);
}

h5, .h5,
h6, .h6{
    margin-bottom: emRhythm(4);
    @include setType(4);
}

p{
    margin-top: 0;
    padding-top: 0;
    padding-bottom: 0;
    hyphens: auto;
    word-wrap: break-word;
    margin-bottom: emRhythm(4);

    @media (min-width: 43.75em) {
        @if $paragraph-justify {
            text-align: justify;
        }
    }
}

@if $paragraph-indent{
    p + p {
        margin-top: emRhythm(-4);
        text-indent: emRhythm(4);
    }
}

small,
.font-small{
    @include setType(3, $ms-down1);
}


blockquote{
    margin-top: emRhythm(4);
    margin-bottom: emRhythm(4);
    margin-left: emRhythm(0);
    padding-top: 0;
    padding-bottom: 0;
    padding-left: emRhythm(4);
    font-family: $font-mono;
    font-weight: bold;
    border-left: $base-vertical-unit solid lighten(#000, 50%);
}

code,
kbd,
pre,
samp{
    font-family: $font-mono;
}

hr{
    border: 0;
    margin-top: emRhythm(4);
    margin-bottom: 0;
    border-top-color: $text-color;
    border-top-style: solid;
    @include rhythmBorderTop(1px, 4);
}