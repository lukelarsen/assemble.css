@charset "UTF-8";
/**
 * General
 */
/*------------------------------------*\
    CONTENTS
\*------------------------------------*/
/**
 * RESPONSIVENESS
 * COLORS
*/
/*------------------------------------*\
    $RESPONSIVENESS
\*------------------------------------*/
/**
 * These came from CSS Wizardry Grids - http://csswizardry.com/csswizardry-grids/
 *
 * Define your breakpoints. The first value is the prefix that shall be used for
 * your classes (e.g. `.palm--full`), the second value is the media query
 * that the breakpoint fires at.
 */
/**
 * Set where breakpoints start.
 */
/**
 * This list will make silent classes like %palm--full or %palm--grid-halves render
 * for you to extend. Your options are 'palm', 'lap', 'portable', 'desk', 'wide'.
 * If $use-silent-classes is set to false it will make regular classes instead of
 * silent classes.
 */
/*------------------------------------*\
    CONTENTS
\*------------------------------------*/
/**
 * CLEARFIX
 * ARROWS
 */
/*------------------------------------*\
    $CLEARFIX
\*------------------------------------*/
/**
 * Micro clearfix, as per: css-101.org/articles/clearfix/latest-new-clearfix-so-far.php
 * Extend the clearfix class with Sass to avoid the `.cf` class appearing over
 * and over in your markup.
 */
.check-list--inline:after {
  content: "";
  display: table;
  clear: both;
}

/*------------------------------------*\
    $ARROWS
\*------------------------------------*/
/**
 * This is from inuit.css by @csswizardry
 *
 * It is a common design treatment to give an element a triangular points-out
 * arrow, we typically build these with CSS. These following classes allow us to
 * generate these arbitrarily with a mixin, `@arrow()`.
 */
/**
 * Forms the basis for any/all CSS arrows.
 */
.tool-tip-bottom > .tool-tip__container, .tool-tip-right > .tool-tip__container {
  position: relative;
}
.tool-tip-bottom > .tool-tip__container:before, .tool-tip-right > .tool-tip__container:before, .tool-tip-bottom > .tool-tip__container:after, .tool-tip-right > .tool-tip__container:after {
  content: "";
  position: absolute;
  border-collapse: separate;
}
.tool-tip-bottom > .tool-tip__container:before, .tool-tip-right > .tool-tip__container:before {
  border: 10px solid transparent;
}
.tool-tip-bottom > .tool-tip__container:after, .tool-tip-right > .tool-tip__container:after {
  border: 9px solid transparent;
}

/**
 * Define individual edges so we can combine what we need, when we need.
 */
.tool-tip-bottom > .tool-tip__container:before, .tool-tip-bottom > .tool-tip__container:after {
  bottom: 100%;
}

.tool-tip-right > .tool-tip__container:before {
  top: 9px;
}
.tool-tip-right > .tool-tip__container:after {
  top: 10px;
}

.tool-tip-right > .tool-tip__container:before, .tool-tip-right > .tool-tip__container:after {
  right: 100%;
}

.tool-tip-bottom > .tool-tip__container:before {
  right: 9px;
}
.tool-tip-bottom > .tool-tip__container:after {
  right: 10px;
}

/*------------------------------------*\
    CONTENTS
\*------------------------------------*/
/**
 * BACKGROUND IMAGES
 * SIZING
 * RESPONSIVE
 * LOAD CUSTOM FONTS
 * ARROWS
 * TRANSITIONS
*/
/*------------------------------------*\
    $BACKGROUND IMAGES
\*------------------------------------*/
/*------------------------------------*\
    $SIZING
\*------------------------------------*/
/*------------------------------------*\
    $RESPONSIVE
\*------------------------------------*/
/**
 * Media query mixin.
 *
 * It’s not great practice to define solid breakpoints up-front, preferring to
 * modify your design when it needs it, rather than assuming you’ll want a
 * change at ‘mobile’. However, as inuit.css is required to take a hands off
 * approach to design decisions, this is the closest we can get to baked-in
 * responsiveness. It’s flexible enough to allow you to set your own breakpoints
 * but solid enough to be frameworkified.
 *
 * We define some broad breakpoints in our vars file that are picked up here
 * for use in a simple media query mixin. Our options are:
 *
 * palm
 * lap
 * portable
 * desk
 * desk-wide
 *
 * Not using a media query will, naturally, serve styles to all devices.
 *
 * `@include media-query(palm){ [styles here] }`
 *
 * We work out your end points for you:
 */
/*------------------------------------*\
    $LOAD CUSTOM FONTS
\*------------------------------------*/
/**
 * Slightly modified from Bourbon.io
 *
 * Order of the includes matters, and it is: normal, bold, italic, bold+italic.
 */
/*------------------------------------*\
    $ARROWS
\*------------------------------------*/
/**
 * This comes from inuit.css by @csswizardry
 *
 * CSS arrows!!! But... before you read on, you might want to grab a coffee...
 *
 * This mixin creates a CSS arrow on a given element. We can have the arrow
 * appear in one of 12 locations, thus:
 *
 *       01    02    03
 *    +------------------+
 * 12 |                  | 04
 *    |                  |
 * 11 |                  | 05
 *    |                  |
 * 10 |                  | 06
 *    +------------------+
 *       09    08    07
 *
 * You pass this position in along with a desired arrow color and optional
 * border color, for example:
 *
 * `@include arrow(top, left, red)`
 *
 * for just a single, red arrow, or:
 *
 * `@include arrow(bottom, center, red, black)`
 *
 * which will create a red triangle with a black border which sits at the bottom
 * center of the element. Call the mixin thus:
 *
   .foo{
       background-color:#BADA55;
       border:1px solid #ACE;
       @include arrow(top, left, #BADA55, #ACE);
   }
 *
 */
/**
 * UI
 */
/*------------------------------------*\
    CONTENTS
\*------------------------------------*/
/**
 * IMPORTS
*/
/*------------------------------------*\
    $IMPORTS
\*------------------------------------*/
/*------------------------------------*\
    CONTENTS
\*------------------------------------*/
/**
 * RESET
*/
/*------------------------------------*\
    $RESET
\*------------------------------------*/
/**
 * A more considered reset; more of a restart...
 * As per: csswizardry.com/2011/10/reset-restarted
 */
/**
* Let’s make the box model all nice, shall we...?
*/
*, *:before, *:after {
  box-sizing: border-box;
}

/**
 * The usual...
 */
h1, h2, h3, h4, h5, h6,
p, blockquote, pre,
dl, dd, ol, ul,
form, fieldset, legend,
table, th, td, caption,
hr {
  margin: 0;
  padding: 0;
}

/**
 * Give a help cursor to elements that give extra info on `:hover`.
 */
abbr[title], dfn[title] {
  cursor: help;
}

/**
 * Remove underlines from potentially troublesome elements.
 */
u, ins {
  text-decoration: none;
}

/**
 * Apply faux underline via `border-bottom`.
 */
ins {
  border-bottom: 1px solid;
}

/**
 * So that `alt` text is visually offset if images don’t load.
 */
img {
  font-style: italic;
}

/**
 * Give form elements some cursor interactions...
 */
label,
input,
textarea,
button,
select,
option {
  cursor: pointer;
}

.text-input:active,
.text-input:focus,
textarea:active,
textarea:focus {
  cursor: text;
  outline: none;
}

time,
.time {
  text-transform: uppercase;
}

ol,
ul,
dl {
  margin-top: 0;
  margin-bottom: emRhythm(4);
  margin-left: emRhythm(4);
  padding-top: 0;
  padding-bottom: 0;
}

ul ul,
ol ol,
dl dl {
  margin-left: 0;
}

ul {
  list-style: disc;
}

ol {
  list-style: decimal;
}

abbr {
  font-variant: small-caps;
  font-weight: 600;
  text-transform: lowercase;
}

abbr[title]:hover {
  cursor: help;
}

em {
  font-style: italic;
}

b,
strong {
  font-weight: bold;
}

/*------------------------------------*\
    CONTENTS
\*------------------------------------*/
/**
 * NORMALIZE.CSS
*/
/*------------------------------------*\
    $NORMALIZE.CSS
\*------------------------------------*/
/*! normalize.css v2.1.0 | MIT License | git.io/normalize */
/* ==========================================================================
   HTML5 display definitions
   ========================================================================== */
/*
 * Correct `block` display not defined in IE 8/9.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
nav,
section,
summary {
  display: block;
}

/*
 * Correct `inline-block` display not defined in IE 8/9.
 */
audio,
canvas,
video {
  display: inline-block;
}

/*
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0;
}

/*
 * Address styling not present in IE 8/9.
 */
[hidden] {
  display: none;
}

/* ==========================================================================
   Base
   ========================================================================== */
/*
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
  -ms-text-size-adjust: 100%;
  /* 2 */
}

/* ==========================================================================
   Links
   ========================================================================== */
/*
 * Address `outline` inconsistency between Chrome and other browsers.
 */
a:focus {
  outline: thin dotted;
}

/*
 * Improve readability when focused and also mouse hovered in all browsers.
 */
a:active,
a:hover {
  outline: 0;
}

/* ==========================================================================
   Typography
   ========================================================================== */
/*
 * Address styling not present in IE 8/9, Safari 5, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted;
}

/*
 * Address styling not present in Safari 5 and Chrome.
 */
dfn {
  font-style: italic;
}

/*
 * Address differences between Firefox and other browsers.
 */
hr {
  -moz-box-sizing: content-box;
  box-sizing: content-box;
  height: 0;
}

/*
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000;
}

/*
 * Improve readability of pre-formatted text in all browsers.
 */
pre {
  white-space: pre-wrap;
}

/*
 * Set consistent quote types.
 */
q {
  quotes: "\201C" "\201D" "\2018" "\2019";
}

/*
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

/* ==========================================================================
   Embedded content
   ========================================================================== */
/*
 * Remove border when inside `a` element in IE 8/9.
 */
img {
  border: 0;
}

/*
 * Correct overflow displayed oddly in IE 9.
 */
svg:not(:root) {
  overflow: hidden;
}

/* ==========================================================================
   Figures
   ========================================================================== */
/*
 * Address margin not present in IE 8/9 and Safari 5.
 */
figure {
  margin: 0;
}

/* ==========================================================================
   Forms
   ========================================================================== */
/*
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}

/*
 * 1. Correct `color` not being inherited in IE 8/9.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */
}

/*
 * 1. Correct font family not being inherited in all browsers.
 * 2. Correct font size not being inherited in all browsers.
 * 3. Address margins set differently in Firefox 4+, Safari 5, and Chrome.
 */
button,
input,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 2 */
  margin: 0;
  /* 3 */
}

/*
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
button,
input {
  line-height: normal;
}

/*
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Chrome, Safari 5+, and IE 8+.
 * Correct `select` style inheritance in Firefox 4+ and Opera.
 */
button,
select {
  text-transform: none;
}

/*
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */
}

/*
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default;
}

/*
 * 1. Address box sizing set to `content-box` in IE 8/9.
 * 2. Remove excess padding in IE 8/9.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/*
 * 1. Address `appearance` set to `searchfield` in Safari 5 and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari 5 and Chrome
 *    (include `-moz` to future-proof).
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  -moz-box-sizing: content-box;
  -webkit-box-sizing: content-box;
  /* 2 */
  box-sizing: content-box;
}

/*
 * Remove inner padding and search cancel button in Safari 5 and Chrome
 * on OS X.
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

/*
 * 1. Remove default vertical scrollbar in IE 8/9.
 * 2. Improve readability and alignment in all browsers.
 */
textarea {
  overflow: auto;
  /* 1 */
  vertical-align: top;
  /* 2 */
}

/* ==========================================================================
   Tables
   ========================================================================== */
/*
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0;
}

/*------------------------------------*\
    CONTENTS
\*------------------------------------*/
/**
 * IMPORTS
 * GRIDS
*/
/*------------------------------------*\
    $IMPORTS
\*------------------------------------*/
/*------------------------------------*\
    CONTENTS
\*------------------------------------*/
/**
 * GRID DEFAULT
 * FLEX CELLS MODIFIER
 * GRID WIDTH MODIFIERS
 * GRID SINGLE WIDTH MODIFIERS
 * GRID GUTTER MODIFIERS
 * GRID ALIGNMENT MODIFIERS
 * GRID SINGLE ALIGNMENT MODIFIERS
*/
/*------------------------------------*\
    GRID DEFAULT
\*------------------------------------*/
.g-main, .form-thirds, .form-quarters {
  display: flex;
  flex-wrap: wrap;
  list-style: none;
  margin: 0;
  padding: 0;
}

.gc-content, .gc-reminder {
  flex: 1;
}

/*------------------------------------*\ 
    $FLEX CELLS MODIFIER
\*------------------------------------*/
/**

/**
 * This will make all cells the same height.
 *
 * Apply with %grid.
 */
.g-main > div[class^='gc-'] {
  display: flex;
}

/*------------------------------------*\ 
    $GRID WIDTH MODIFIERS
\*------------------------------------*/
/**
 * If we need to set a specific width to all
 * cells in a grid use these extends
 *
 * Extend them along with %grid.
 */
.g-main > div[class^='gc-'] {
  flex: 0 0 50%;
}

/*------------------------------------*\ 
    $GRID SINGLE WIDTH MODIFIERS
\*------------------------------------*/
/**
 * We can set individual cell width with these extends.
 */
.gc-reminder--wide {
  flex: 0 0 100% !important;
}

/*------------------------------------*\ 
    $GRID GUTTER MODIFIERS
\*------------------------------------*/
/**
 * We can set individual grid gutter width with these.
 *
 * Apply them with the %grid extend.
 */
.g-main {
  margin-left: -2em;
}
.g-main > div[class^='gc-'] {
  padding-left: 2em;
  margin-bottom: 2em;
}

/*------------------------------------*\
    $GRID ALIGNMENT MODIFIERS
\*------------------------------------*/
/**
 * If we need all cells in a grid to align to the
 * same location use these classes.
 *
 * Apply them with the %grid extend.
 */
/*------------------------------------*\
    $GRID SINGLE ALIGNMENT MODIFIERS
\*------------------------------------*/
/**
 * If we need single cells in a grid to align to a
 * specific location use these extends.
 *
 * Apply them with the %grid__item extend.
 */
/*------------------------------------*\
    CONTENTS
\*------------------------------------*/
/**
 * GRID RESPONSIVE EXTENDS
 * FIXED WIDTH GRID CELLS
*/
/*------------------------------------*\
    $RESPONSIVE EXTENDS
\*------------------------------------*/
/**
 * Enclose a block of code with a media query as named in `$breakpoints`.
 */
/**
 * Create our width & gutter extends (or classes), prefixed by the specified namespace.
 */
/**
 * Generate our responsive extends (or classes)
 */
@media only screen and (max-width: 480px) {
  /**
   * Width Whole
   */
  .g-main > div[class^='gc-'],
  .gc-content,
  .gc-sidebar {
    flex: 0 0 100% !important;
  }

  /**
   * Width Half
   */
  /**
   * Width Third
   */
  /**
   * Width Quarter
   */
  /**
   * Width Fifth
   */
  /**
   * Gutter Small
   */
  /**
   * Gutter Medium
   */
  /**
   * Gutter Large
   */
  /**
   * Gutter xLarge
   */
}
@media only screen and (min-width: 481px) and (max-width: 1023px) {
  /**
   * Width Whole
   */
  /**
   * Width Half
   */
  /**
   * Width Third
   */
  /**
   * Width Quarter
   */
  /**
   * Width Fifth
   */
  /**
   * Gutter Small
   */
  /**
   * Gutter Medium
   */
  /**
   * Gutter Large
   */
  /**
   * Gutter xLarge
   */
}
@media only screen and (max-width: 1023px) {
  /**
   * Width Whole
   */
  /**
   * Width Half
   */
  /**
   * Width Third
   */
  /**
   * Width Quarter
   */
  /**
   * Width Fifth
   */
  /**
   * Gutter Small
   */
  /**
   * Gutter Medium
   */
  /**
   * Gutter Large
   */
  /**
   * Gutter xLarge
   */
}
@media only screen and (max-width: 1024px) {
  /**
   * Width Whole
   */
  /**
   * Width Half
   */
  /**
   * Width Third
   */
  /**
   * Width Quarter
   */
  /**
   * Width Fifth
   */
  /**
   * Gutter Small
   */
  /**
   * Gutter Medium
   */
  /**
   * Gutter Large
   */
  /**
   * Gutter xLarge
   */
}
@media only screen and (min-width: 1500px) {
  /**
   * Width Whole
   */
  /**
   * Width Half
   */
  /**
   * Width Third
   */
  /**
   * Width Quarter
   */
  /**
   * Width Fifth
   */
  /**
   * Gutter Small
   */
  /**
   * Gutter Medium
   */
  /**
   * Gutter Large
   */
  /**
   * Gutter xLarge
   */
}
/*------------------------------------*\ 
    $FIXED WITH GRID CELLS
\*------------------------------------*/
/**
 * Set the widths you need in your layout here.
 * These are px values.
 */
/**
 * Generate our fixed width extends (or classes)
 */
/*------------------------------------*\
    $GRIDS
\*------------------------------------*/
/**
 * !IMPORTANT - It is best to only attach grid and/or width styles to your
 * grid classes. Don't clutter them with other styles. Instead add markup
 * inside these divs and then style those.
 *
 * grid blocks need to start with .g- and grid cells should start with .gc-
 *
 * @extend %grid__item is only needed when there isn't another extend
 * defining it's flex width.
 *
 * Note: If you don't give a grid cell a width it will just fill the
 * remaining space.
 */
@media only screen and (min-width: 481px) and (max-width: 1023px) {
  .gc-sidebar {
    width: 100px;
  }
}

/*------------------------------------*\
    CONTENTS
\*------------------------------------*/
/**
 * CREDITS
 * VARIABLES
 * IMPORTS
 * BASE TYPE SETTINGS
 */
/*------------------------------------*\
    $CREDITS
\*------------------------------------*/
/**
 * Type settings are a slightly modified version of typesettings.io
 * by Ian Rose. https://twitter.com/rose_ian & http://typesettings.io
 */
/*------------------------------------*\
    $VARIABLES
\*------------------------------------*/
/*------------------------------------*\
    $IMPORTS
\*------------------------------------*/
/*------------------------------------*\
    CONTENTS
\*------------------------------------*/
/**
 * INTERNAL VARIABLES
 * HELPER FUNCTIONS
 * MIXINS
 */
/*------------------------------------*\
    $INTERNAL VARIABLES
\*------------------------------------*/
/*------------------------------------*\
    $HELPER FUNCTIONS
\*------------------------------------*/
/*------------------------------------*\
    $MIXINS
\*------------------------------------*/
/*------------------------------------*\
    $BASE TYPE SETTINGS
\*------------------------------------*/
html {
  font-size: 100%;
  -webkit-text-size-adjust: 100%;
}

body {
  margin: 0;
  padding: 0;
  font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
  font-weight: 400;
  line-height: 1.5;
  color: black;
}

h1, .h1,
h2, .h2,
h3, .h3,
h4, .h4,
h5, .h5,
h6, .h6 {
  margin-top: 0;
  padding-top: 0;
  padding-bottom: 0;
  font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
  font-weight: bold;
}

h1, .h1 {
  margin-bottom: 0.7502266em;
  font-size: 1.999396em;
  line-height: 1.1253399;
}
@media (min-width: 43.75em) {
  h1, .h1 {
    margin-bottom: 0.5305704em;
    font-size: 2.8271459em;
    line-height: 1.0611408;
  }
}
@media (min-width: 56.25em) {
  h1, .h1 {
    margin-bottom: 0.3752266em;
    font-size: 3.9975844em;
    line-height: 0.9380665;
  }
}

h2, .h2 {
  margin-bottom: 1.0608204em;
  font-size: 1.414em;
  line-height: 1.3260255;
}
@media (min-width: 43.75em) {
  h2, .h2 {
    margin-bottom: 0.7502266em;
    font-size: 1.999396em;
    line-height: 1.1253399;
  }
}
@media (min-width: 56.25em) {
  h2, .h2 {
    margin-bottom: 0.5305704em;
    font-size: 2.8271459em;
    line-height: 1.0611408;
  }
}

h3, .h3 {
  margin-bottom: 1.0608204em;
  font-size: 1.414em;
  line-height: 1.3260255;
}
@media (min-width: 56.25em) {
  h3, .h3 {
    margin-bottom: 0.7502266em;
    font-size: 1.999396em;
    line-height: 1.1253399;
  }
}

h4, .h4 {
  margin-bottom: 1.0608204em;
  font-size: 1.414em;
  line-height: 1.3260255;
}

h5, .h5,
h6, .h6 {
  margin-bottom: 1.5em;
  font-size: 1em;
  line-height: 1.5;
}

p {
  margin-top: 0;
  padding-top: 0;
  padding-bottom: 0;
  -webkit-hyphens: auto;
  -moz-hyphens: auto;
  -ms-hyphens: auto;
  -o-hyphens: auto;
  hyphens: auto;
  word-wrap: break-word;
  margin-bottom: 1.5em;
}
@media (min-width: 43.75em) {
  p {
    text-align: justify;
  }
}

p + p {
  margin-top: -1.5em;
  text-indent: 1.5em;
}

small,
.font-small {
  font-size: 0.7072136em;
  line-height: 1.59075;
}

blockquote {
  margin-top: 1.5em;
  margin-bottom: 1.5em;
  margin-left: 0em;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 1.5em;
  font-family: "Lucida Console", Monaco, monospace;
  font-weight: bold;
  border-left: 6px solid gray;
}

code,
kbd,
pre,
samp {
  font-family: "Lucida Console", Monaco, monospace;
}

hr {
  border: 0;
  margin-top: 1.5em;
  margin-bottom: 0;
  border-top-color: black;
  border-top-style: solid;
  border-top-width: 1px;
  padding-top: 1.4375em;
}

/*------------------------------------*\
    CONTENTS
\*------------------------------------*/
/**
 * IMPORTS
 * FORMS
 * FORM ERRORS
 * FORM HELP
 */
/*------------------------------------*\
    $IMPORTS
\*------------------------------------*/
/*------------------------------------*\
    CONTENTS
\*------------------------------------*/
/**
 * FORM GRID
 * FORM WIDTH MODIFIERS
 * SINGLE FORM FIELD MODIFIERS
 * FORM GUTTER MODIFIERS
*/
/*------------------------------------*\
    $FORM GRID
\*------------------------------------*/
.form-thirds, .form-quarters {
  margin-left: -1em;
}
.form-thirds > li, .form-quarters > li {
  /*
      Todo - The margin-bottom value can become dynamic or a variable
      @author - lukelarsen
      @date - 3/13/14
      @time - 7:21 AM
   */
  margin-bottom: 15px;
  padding-left: 1em;
}

/*------------------------------------*\
    $FORM WIDTH MODIFIERS
\*------------------------------------*/
.form-thirds > li {
  flex: 0 0 33.3333%;
}

.form-quarters > li {
  flex: 0 0 25%;
}

/*------------------------------------*\
    $SINGLE FORM FIELD MODIFIERS
\*------------------------------------*/
/**
 * We can set individual form width with these extends.
 */
.form-item-half {
  flex: 0 0 50% !important;
}

/*------------------------------------*\
    $FORM GUTTER MODIFIERS
\*------------------------------------*/
/**
 * The small settings are the default so they are not included
 * here. These others will override the small size default.
 */
/*------------------------------------*\
    CONTENTS
\*------------------------------------*/
/**
 * FORM RESPONSIVE MIXINS
*/
/*------------------------------------*\
    $FORM RESPONSIVE MIXINS
\*------------------------------------*/
/**
 * Generate our responsive extends (or classes)
 */
@media only screen and (max-width: 480px) {
  /**
   * Forms One Col
   */
  .form-quarters > li {
    flex: 0 0 100% !important;
  }

  /**
   * Form Two Cols
   */
  /**
   * Form Three Cols
   */
  /**
   * Forms Four Cols
   */
  /**
   * Forms Five Cols
   */
  /**
   * Forms Gutter Small
   */
  /**
   * There is no extend for Forms Gutter Small because it is
   * the default. Just don't extend any form gutters to get
   * it's size.
   */
  /**
   * Forms Gutter Medium
   */
  /**
   * Forms Gutter Large
   */
  /**
   * Forms Gutter xLarge
   */
}
@media only screen and (min-width: 481px) and (max-width: 1023px) {
  /**
   * Forms One Col
   */
  /**
   * Form Two Cols
   */
  /**
   * Form Three Cols
   */
  /**
   * Forms Four Cols
   */
  /**
   * Forms Five Cols
   */
  /**
   * Forms Gutter Small
   */
  /**
   * There is no extend for Forms Gutter Small because it is
   * the default. Just don't extend any form gutters to get
   * it's size.
   */
  /**
   * Forms Gutter Medium
   */
  /**
   * Forms Gutter Large
   */
  /**
   * Forms Gutter xLarge
   */
}
@media only screen and (max-width: 1023px) {
  /**
   * Forms One Col
   */
  /**
   * Form Two Cols
   */
  /**
   * Form Three Cols
   */
  /**
   * Forms Four Cols
   */
  /**
   * Forms Five Cols
   */
  /**
   * Forms Gutter Small
   */
  /**
   * There is no extend for Forms Gutter Small because it is
   * the default. Just don't extend any form gutters to get
   * it's size.
   */
  /**
   * Forms Gutter Medium
   */
  /**
   * Forms Gutter Large
   */
  /**
   * Forms Gutter xLarge
   */
}
@media only screen and (max-width: 1024px) {
  /**
   * Forms One Col
   */
  /**
   * Form Two Cols
   */
  /**
   * Form Three Cols
   */
  /**
   * Forms Four Cols
   */
  /**
   * Forms Five Cols
   */
  /**
   * Forms Gutter Small
   */
  /**
   * There is no extend for Forms Gutter Small because it is
   * the default. Just don't extend any form gutters to get
   * it's size.
   */
  /**
   * Forms Gutter Medium
   */
  /**
   * Forms Gutter Large
   */
  /**
   * Forms Gutter xLarge
   */
}
@media only screen and (min-width: 1500px) {
  /**
   * Forms One Col
   */
  /**
   * Form Two Cols
   */
  /**
   * Form Three Cols
   */
  /**
   * Forms Four Cols
   */
  /**
   * Forms Five Cols
   */
  /**
   * Forms Gutter Small
   */
  /**
   * There is no extend for Forms Gutter Small because it is
   * the default. Just don't extend any form gutters to get
   * it's size.
   */
  /**
   * Forms Gutter Medium
   */
  /**
   * Forms Gutter Large
   */
  /**
   * Forms Gutter xLarge
   */
}
/*------------------------------------*\
    CONTENTS
\*------------------------------------*/
/**
 * GENERAL
 * CHECKBOXES & RADIOS
 * TEXTAREA
*/
/*------------------------------------*\
    $GENERAL
\*------------------------------------*/
[class^='form-'] > li > input[type="text"],
[class^='form-'] > li > input[type="number"],
[class^='form-'] > li > input[type="date"],
[class^='form-'] > li > textarea,
[class^='form-'] > li > select {
  width: 100%;
  display: block;
}

/*------------------------------------*\
    $CHECKBOXES & RADIOS
\*------------------------------------*/
.check-list,
.check-list--inline {
  list-style: none;
  margin: 0;
  padding: 0;
}

.check-list--inline li {
  float: left;
  margin-right: 10px;
}

/*------------------------------------*\
    $TEXTAREA
\*------------------------------------*/
textarea {
  height: 100px;
}

/*------------------------------------*\ 
    $FORMS
\*------------------------------------*/
/* Add classes here to extend the different columns your
 * project will need. The classes need to start with .form-
 * For example .form-three-cols
 * You can then optionally include one of these:
 * %form--fit
 * %form--full
 * %form--halves
 * %form--thirds
 * %form--quarters
 * %form--fifths
 */
/*------------------------------------*\
    $FORM ERRORS
\*------------------------------------*/
.form-error > label,
.form-error > .label {
  color: red;
}
.form-error input[type="text"] {
  border: solid red 1px;
}

.form-error__message {
  color: red;
}

/*------------------------------------*\
    CONTENTS
\*------------------------------------*/
/**
 * VARIABLES
 * IMPORTS
 * DEFINE BUTTONS
 */
/*------------------------------------*\
    $VARIABLES
\*------------------------------------*/
/*------------------------------------*\
    $IMPORTS
\*------------------------------------*/
/*------------------------------------*\
    CONTENTS
\*------------------------------------*/
/**
 * BUTTON COLORS
 */
/*------------------------------------*\
    $BUTTON COLORS
\*------------------------------------*/
/*------------------------------------*\
    CONTENTS
\*------------------------------------*/
/**
 * EXTENDS
 */
/*------------------------------------*\
    $EXTENDS
\*------------------------------------*/
.btn {
  display: inline-block;
  vertical-align: middle;
  white-space: nowrap;
  font-family: inherit;
  font-size: 0.7em;
  cursor: pointer;
  margin: 0;
  padding-top: 0;
  padding-bottom: 0;
  line-height: 3;
  height: 3em;
  padding-right: 1.3em;
  padding-left: 1.3em;
  background-color: #000;
  overflow: visible;
  text-decoration: none;
  color: #fff;
  transition: background-color .2s ease-in-out;
  border: 1px solid;
}
.btn {
  font-size: 0.84em;
}
.btn {
  display: block;
  width: 100%;
  text-align: center;
}
.btn {
  background-color: #565656;
  border-color: #232323;
}
.btn:hover, .btn:active {
  background: #6c4141;
}
.btn:hover, .btn:active, .btn:focus, .btn:visited {
  text-decoration: none;
  color: #fff;
}
.btn:active, .btn:focus {
  outline: none;
}
.btn::-moz-focus-inner {
  border: 0;
  padding: 0;
}

/*------------------------------------*\
    $DEFINE BUTTONS
\*------------------------------------*/
/*------------------------------------*\
    CONTENTS
\*------------------------------------*/
/**
 * VARIABLES
 * IMPORTS
 * TOOL TIP RIGHT
 * TOOL TIP BOTTOM
 * TOOL TIP CONTAINER
 * TOOL TIP CLOSE BUTTON
 */
/*------------------------------------*\
    $VARIABLES
\*------------------------------------*/
/**
 * Tool Tip Right
 */
/**
 * Tool Tip Bottom
 */
/*------------------------------------*\
    $IMPORTS
\*------------------------------------*/
/*------------------------------------*\
    CONTENTS
\*------------------------------------*/
/**
 * TOOL TIP BASE
 * TOOL TIP RIGHT
 * TOOL TIP BOTTOM
 * TOOL TIP ACTIVE
 */
/*------------------------------------*\
    $TOOL TIP BASE
\*------------------------------------*/
.tool-tip-right, .tool-tip-bottom {
  position: relative;
  cursor: pointer;
  color: #B8B8B8;
  float: right;
}
.tool-tip-right .tool-tip__container, .tool-tip-bottom .tool-tip__container {
  position: absolute;
  z-index: 9;
  visibility: hidden;
  padding: 10px 15px;
  width: 200px;
  text-transform: none;
  opacity: 0;
  cursor: default;
}
.tool-tip-right .tool-tip__close, .tool-tip-bottom .tool-tip__close {
  position: absolute;
  right: 0;
  bottom: 0;
  cursor: pointer;
}

/*------------------------------------*\
    $TOOL TIP RIGHT
\*------------------------------------*/
.tool-tip-right > .tool-tip__container {
  transition: visibility 0s ease-in, opacity .3s ease-in, left .3s ease-in;
  top: -19px;
  left: 40px;
}
.tool-tip-right > .tool-tip__container:before {
  border-right-color: green !important;
}
.tool-tip-right > .tool-tip__container:after {
  border-right-color: green !important;
}
@media only screen and (max-width: 1023px) {
  .tool-tip-right > .tool-tip__container {
    top: 21px;
    left: -191px !important;
  }
  .tool-tip-right > .tool-tip__container:before, .tool-tip-right > .tool-tip__container:after {
    border-right-color: transparent !important;
  }
}

/*------------------------------------*\
    $TOOL TIP BOTTOM
\*------------------------------------*/
.tool-tip-bottom > .tool-tip__container {
  transition: visibility 0s ease-in, opacity .3s ease-in, top .3s ease-in;
  top: 60px;
  left: -179px;
}
.tool-tip-bottom > .tool-tip__container:before {
  border-bottom-color: green !important;
}
.tool-tip-bottom > .tool-tip__container:after {
  border-bottom-color: green !important;
}
@media only screen and (max-width: 1023px) {
  .tool-tip-bottom > .tool-tip__container {
    top: 21px;
    left: -191px !important;
  }
}

/*------------------------------------*\
    $TOOL TIP ACTIVE
\*------------------------------------*/
.tool-tip-active .tool-tip__container {
  visibility: visible;
  opacity: 1;
}

.tool-tip-right.tool-tip-active .tool-tip__container {
  left: 35px;
}

.tool-tip-bottom.tool-tip-active .tool-tip__container {
  top: 55px;
}

/*------------------------------------*\
    $TOOLTIP RIGHT
\*------------------------------------*/
/*------------------------------------*\
    $TOOLTIP BOTTOM
\*------------------------------------*/
/*------------------------------------*\
    $TOOL TIP CONTAINER
\*------------------------------------*/
.tool-tip__container {
  background-color: green;
  color: white;
}

/*------------------------------------*\
    $TOOL TIP CLOSE BUTTON
\*------------------------------------*/
.tool-tip__close {
  background-color: black;
  color: white;
  padding: 3px 10px;
}

/*------------------------------------*\
    $TESTING
\*------------------------------------*/
