/*------------------------------------*\
    CONTENTS
\*------------------------------------*/
/**
 *  INTERNAL VARIABLES
 *  HELPER FUNCTIONS
 *  MIXINS
 */

////
/// @author Typesettings.io
/// @link http://typesettings.io
/// @group typography
////





/*------------------------------------*\
    !INTERNAL VARIABLES
\*------------------------------------*/

// Best not to adjust these.

/// Converts the $base-font-size value to EMs
/// @requires {variable} $base-font-size
/// @type number
$base-em-font-size: ($base-font-size / 16px) * 1em !default;

/// One step down in the modular scale in EMs
/// @requires {variable} $base-em-font-size
/// @requires {variable} $ms-ratio
/// @type number
$ms-down1: $base-em-font-size / $ms-ratio;

/// Two steps down in the modular scale in EMs
/// @requires {variable} $ms-down1
/// @requires {variable} $ms-ratio
/// @type number
$ms-down2: $ms-down1 /$ms-ratio;

/// Three steps down in the modular scale in EMs
/// @requires {variable} $ms-down2
/// @requires {variable} $ms-ratio
/// @type number
$ms-down3: $ms-down2 / $ms-ratio;

/// One step up in the modular scale in EMs
/// @requires {variable} $base-em-font-size
/// @requires {variable} $ms-ratio
/// @type number
$ms-up1: $base-em-font-size * $ms-ratio;

/// Two steps up in the modular scale in EMs
/// @requires {variable} $ms-up1
/// @requires {variable} $ms-ratio
/// @type number
$ms-up2: $ms-up1 * $ms-ratio;

/// Three steps up in the modular scale in EMs
/// @requires {variable} $ms-up2
/// @requires {variable} $ms-ratio
/// @type number
$ms-up3: $ms-up2 * $ms-ratio;

/// Four steps up in the modular scale in EMs
/// @requires {variable} $ms-up3
/// @requires {variable} $ms-ratio
/// @type number
$ms-up4: $ms-up3 * $ms-ratio;

/// Creates a unitless line-height that is based on typographic ideals and maintains vertical rhythm.
/// @requires {variable} $base-vertical-unit
/// @requires {variable} $base-line-multi
/// @requires {variable} $base-font-size
/// @type number
$base-line-height: ($base-vertical-unit * $base-line-multi) / $base-font-size;





/*------------------------------------*\
    !HELPER FUNCTIONS
\*------------------------------------*/

/// Returns a number without a unit. For example 16px becomes 16
/// @param {number} $number
/// @return {number}
/// @example strip-units(($target / $context));
@function strip-units($number){
    @return $number / ($number * 0 + 1);
}

/// Returns an EM value. For example 24px becomes 1.5em
/// @param {number} $target
/// @param {number} $context [$base-font-size]
/// @return {number}
/// @example em-calc(4, $ms-up2);
/// @requires {function} strip-units
@function em-calc($target, $context: $base-font-size){
    @return strip-units(($target / $context)) + 0em;
}

/// Returns an EM value that is a multiple of our defined base vertical unit. For example 3 becomes 1.125em
/// @param {number} $lines [$base-line-multi] - Sets the line-height
/// @param {number} $font-size [$base-em-font-size] - Sets the font-size
/// @return {number | null}
/// @example em-rhythm(4, $ms-up2);
/// @requires {function} strip-units
/// @requires {variable} $base-font-size
@function em-rhythm($lines: $base-vertical-unit, $font-size: $base-em-font-size){
    @return (strip-units($lines) * strip-units($base-vertical-unit)) / (strip-units($font-size) * strip-units($base-font-size)) + 0em;
}

/// Returns a unitless number that is a multiple of our defined base vertical unit. For example 3 becomes 1.125
/// @param {number} $lines [$base-line-multi] - Sets the line-height
/// @param {number} $font-size [$base-em-font-size] - Sets the font-size
/// @return {number | null}
/// @example unitless-rhythm($lines, $font-size);
/// @requires {function} strip-units
/// @requires {variable} $base-font-size
@function unitless-rhythm($lines: $base-vertical-unit, $font-size: $base-em-font-size){
    @return ($lines * strip-units($base-vertical-unit)) / (strip-units($font-size) * strip-units($base-font-size));
}






/*------------------------------------*\
    !MIXINS
\*------------------------------------*/

// Finally, the tools that you can use throughout your project to set
// all the wonderful type related stuffs.

/// Sets the type in EMs and makes a vertical rhythm unitless line-height that is based on context.
/// @param {number} $lines [$base-line-multi] - Sets the line-height
/// @param {number} $font-size [$base-em-font-size] - Sets the font-size
/// @example @include set-type(6, $ms-up2);
/// @requires {function} unitless-rhythm
@mixin set-type($lines: $base-line-multi, $font-size: $base-em-font-size){
    font-size: $font-size;
    line-height: unitless-rhythm($lines, $font-size);
}

/// Creates a vertical rhythm unitless line-height that is based on context
/// @param {number} $lines [$base-line-multi] - Sets the line-height
/// @param {number} $font-size [$base-em-font-size] - Sets the font-size
/// @example @include set-teading(6, $ms-up2);
/// @requires {function} unitless-rhythm
@mixin set-teading($lines: $base-line-multi, $font-size: $base-em-font-size){
    line-height: unitless-rhythm($lines, $font-size);
}

/// Helps us keep vertical rthythm when using top borders
/// @param {number} $border-width [1px] - Sets the border width
/// @param {number} $lines [$base-line-multi] - Helps calculate the top padding
/// @param {number} $font-size [$base-em-font-size] - Sets the font-size
/// @example @include rthythm(2px, $base-line-multi, $ms-up2);
/// @requires {function} strip-units
/// @requires {variable} $base-vertical-unit
/// @requires {variable} $base-font-size
@mixin rhythm-border-top($border-width: 1px, $lines: $base-line-multi, $font-size: $base-em-font-size){
    padding-top: (($lines * strip-units($base-vertical-unit)) - strip-units($border-width)) / (strip-units($font-size) * strip-units($base-font-size)) + 0em;
    border-top-width: $border-width;
}

/// Helps us keep vertical rthythm when using bottom borders
/// @param {number} $border-width [1px] - Sets the border width
/// @param {number} $lines [$base-line-multi] - Helps calculate the top padding
/// @param {number} $font-size [$base-em-font-size] - Sets the font-size
/// @example @include rthythm(2px, $base-line-multi, $ms-up2);
/// @requires {function} strip-units
/// @requires {variable} $base-vertical-unit
/// @requires {variable} $base-font-size
@mixin rhythm-border-bottom($border-width: 1px, $lines: $base-line-multi, $font-size: $base-em-font-size){
    padding-bottom: (($lines * strip-units($base-vertical-unit)) - strip-units($border-width)) / (strip-units($font-size) * strip-units($base-font-size)) + 0em;
    border-bottom-width: $border-width;
}

/// Helps us keep vertical rthythm when using top & bottom borders
/// @param {number} $border-width [1px] - Sets the border width
/// @param {number} $lines [$base-line-multi] - Helps calculate the top padding
/// @param {number} $font-size [$base-em-font-size] - Sets the font-size
/// @example @include rthythm(2px, $base-line-multi, $ms-up2);
/// @requires {function} strip-units
/// @requires {variable} $base-vertical-unit
/// @requires {variable} $base-font-size
@mixin rhythm-border($border-width: 1px, $lines: $base-line-multi, $font-size: $base-em-font-size){
    padding: (($lines * strip-units($base-vertical-unit)) - strip-units($border-width)) / (strip-units($font-size) * strip-units($base-font-size)) + 0em;
    border-width: $border-width;
}
